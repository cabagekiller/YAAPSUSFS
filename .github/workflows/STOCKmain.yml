name: Build STOCK YAAP OnePlus 12 Android 14 6.1 Kernel OSS

on:
  workflow_dispatch:

jobs:
  build-kernel-a14-6-1-kernelsu-susfs:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: Set swap
        run: |
          export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
          sudo swapoff $SWAP_FILE
          sudo rm -rf $SWAP_FILE
          sudo fallocate -l 16G /swap_filex
          sudo chmod 600 /swap_filex
          sudo mkswap /swap_filex
          sudo swapon /swap_filex
          df -h
          free -h
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 git lld
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo
      - name: Set Environment Variable
        run: |
          echo "BUILD_TIME=$(date "+%y%m%d%H")" >> $GITHUB_ENV
          sudo mkdir -p /mnt/kernel_workspace
          sudo chmod 0777 /mnt/kernel_workspace
          
          git config --global user.email "build-user@build-host"
          git config --global user.name "build-user"
      - name: Clone AnyKernel3 and Other Dependencies
        run: |
          echo "Cloning AnyKernel3 and other dependencies..."
          # Clone repositories using the branch names
          git clone https://github.com/TheWildJames/AnyKernel3.git -b android14-6.1
          #git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          #git clone https://github.com/WildPlusKernel/kernel_patches.git
      
      - name: Sync Kernel Source
        run: |
          echo "Creating folder for configuration: /mnt/kernel_workspace..."
          cd "/mnt/kernel_workspace"
          
          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."
          repo init -u https://github.com/RealJohnGalt/opsm8650_kernel_manifest.git -b kplatform -m default.xml
          
          # Sync repo and apply patches
          repo --version
          repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast
          cd kernel_platform
          rm common -rf
          git clone --depth=1 https://github.com/RealJohnGalt/kernel_common_oneplus_sm8650.git -b oneplus/sm8650_v_15.0.0_oneplus12 common
          
      - name: Clean Previous Build
        run: |
          cd "/mnt/kernel_workspace/kernel_platform"
          bazel clean --expunge
          rm -rf out/
      - name: Build the Kernel
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace..."
          cd "/mnt/kernel_workspace"

          echo "Building the kernel..."
          ./kernel_platform/oplus/build/oplus_build_kernel.sh pineapple gki
      - name: Create Bootimgs Folder and Copy Images
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace..."
          cd "/mnt/kernel_workspace"
          
          echo "Copying Image"
          mkdir -p $GITHUB_WORKSPACE/AnyKernel3 # Ensure directory exists
          cp ./out/dist/Image $GITHUB_WORKSPACE/AnyKernel3/Image
          cp ./out/dist/Image.lz4 $GITHUB_WORKSPACE/AnyKernel3/Image.lz4
          # Debugging variables (removed ZIP_NAME and ZIP_FILE_PATH as they seem incorrect in context)
          echo "BRANCH: ${{ env.BRANCH }}"
          # Validate Image file existence at the correct location
          IMAGE_FILE_PATH="$GITHUB_WORKSPACE/AnyKernel3/Image"
          echo "IMAGE_FILE_PATH: $IMAGE_FILE_PATH"
          if [ -f "$IMAGE_FILE_PATH" ]; then
              echo "Image file found: $IMAGE_FILE_PATH"
          else
              echo "Error: Image file not found at $IMAGE_FILE_PATH!"
              exit 1
          fi
           # Validate Image file existence at the correct location
          IMAGE_FILE_PATH="$GITHUB_WORKSPACE/AnyKernel3/Image.lz4"
          echo "IMAGE_FILE_PATH: $IMAGE_FILE_PATH"
          if [ -f "$IMAGE_FILE_PATH" ]; then
              echo "Image.lz4 file found: $IMAGE_FILE_PATH"
          else
              echo "Error: Image.lz4 file not found at $IMAGE_FILE_PATH!"
              exit 1
          fi
          # Define the repository name if not already set (keep for robustness)
          REPO_NAME=${REPO_NAME:-$GITHUB_REPOSITORY}
          # Create a release using the GitHub CLI, attaching the Image file
          gh release create "v${{ env.BRANCH }}-$(date +'%Y.%m.%d-%H%M%S')" "$IMAGE_FILE_PATH" \
            --repo "$REPO_NAME" \
            --title "OP12 A15 YAAP ${{ env.BRANCH }} With KernelSU & SUSFS" \
            --notes "Kernel release" \
            --prerelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-OP12-A15-6.1_YAAP${{ env.BUILD_TIME }}
          path: AnyKernel3/*

      - name: Upload MSM-KERNEL
        uses: actions/upload-artifact@v4
        with:
          name: OP12-YAAP
          path: /mnt/kernel_workspace/kernel_platform/out/msm-kernel-pineapple-gki/dist/Image
