name: Buildwdadwadawd and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release Tag'
        required: true
        type: string

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OPNORD4-A15"
  BRANCH: "android14-6.1"

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Free disk space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip \
            curl \
            git \
            zip \
            unzip \
            gcc \
            g++ \
            make \
            ninja-build \
            file \
            bc \
            bison \
            flex \
            libssl-dev \
            libelf-dev \
            wget \
            build-essential \
            python3-dev \
            python3-setuptools \
            rsync \
            ccache
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G

      - name: Install Latest Pahole
        run: |
          sudo apt-get remove --purge -y dwarves
          sudo apt-get install -y git build-essential libdw-dev zlib1g-dev
          git clone --recurse-submodules https://git.kernel.org/pub/scm/devel/pahole/pahole.git
          cd pahole
          cmake .
          sudo make install
      - name: Setup Python and Repo Tool
        run: |
          python3 -m pip install --upgrade pip
          pip3 install gitpython xmltodict
          mkdir -p ~/.bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          export PATH=$HOME/bin:$PATH  # Add $HOME/bin to PATH
          echo "$HOME/.bin" >> $GITHUB_PATH
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      - name: Install repo tool to $HOME/bin
        run: |
         mkdir -p $HOME/bin
         wget -O $HOME/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
         chmod a+x $HOME/bin/repo
         export PATH=$HOME/bin:$PATH
         repo --version
      - name: Configure Build Directory
        run: |
          ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          echo "ROOT_DIR=${ROOT_DIR}" >> $GITHUB_ENV
          mkdir -p "builds/${ROOT_DIR}"
          cd "builds/${ROOT_DIR}"
      - name: Clone Required Repositories
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          git clone https://github.com/TheWildJames/AnyKernel3.git -b gki-2.0
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/WildPlusKernel/kernel_patches.git
      - name: Setup Kernel Source
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          mkdir -p kernel_platform/oneplus12_v
          cd kernel_platform/oneplus12_v
          repo init -u https://github.com/Trijal08/anaconda_kernel_oneplus_sm8650_manifest.git -b anaconda-pineapple-waffle -m oneplus12_v.xml --depth=1
          repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
          sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
          sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "$res"|' kernel_platform/common/scripts/setlocalversion            
          sed -i '$s|echo "\$res"|echo "$res"|' kernel_platform/msm-kernel/scripts/setlocalversion
      - name: Setup KernelSU
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next-susfs
          cd KernelSU-Next/kernel
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" Makefile
      - name: Setup SUSFS
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          set -euxo pipefail
          SUSFS_PATCHES="../../../susfs4ksu/kernel_patches"
          KERNEL_PATCHES="../../../kernel_patches"
          KSU_NEXT="KernelSU-Next"
          mkdir -p ./common/fs ./common/include/linux
          cp "${SUSFS_PATCHES}/fs/"* ./common/fs/
          cp "${SUSFS_PATCHES}/include/linux/"* ./common/include/linux/
          #cp "${SUSFS_PATCHES}/KernelSU/10_enable_susfs_for_ksu.patch" "${KSU_NEXT}/"
          cp "${SUSFS_PATCHES}/50_add_susfs_in_gki-android14-6.1.patch" ./common/
          cp "${KERNEL_PATCHES}/69_hide_stuff.patch" ./common/
          cp "${KERNEL_PATCHES}/next/next_hooks.patch" ./common/
          #cp "${KERNEL_PATCHES}/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch" "${KSU_NEXT}/"
          cd "${KSU_NEXT}"
          #patch -p1 --forward < 0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch || echo "Warning: KernelSU SUSFS patch may have been already applied or failed."
          cd ../common
          patch -p1 --forward < next_hooks.patch || echo "Warning: KernelSU SUSFS patch may have been already applied or failed."
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || echo "Warning: SUSFS patch may have been already applied."
          patch -p1 -F 3 < 69_hide_stuff.patch || echo "Warning: 69_hide_stuff patch may have been already applied."
          
          #sed -i '/obj-$(CONFIG_KSU_SUSFS_SUS_SU) += sus_su.o/d' ./fs/Makefile
          git diff --quiet --exit-code || (git add -A && git commit -m "BUILD Kernel (SUSFS setup)" || true)
          cd ..
          git diff --quiet --exit-code || (git add -A && git commit -m "BUILD Kernel (SUSFS setup)" || true)
          git rm --cached KernelSU-Next || true
      - name: Configure Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          set -euxo pipefail
           # Add SUSFS configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_WITH_KPROBES=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_COMPAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_POSIX_ACL=y" >> ./common/arch/arm64/configs/gki_defconfig
          # Add additional tmpfs config setting
          echo "CONFIG_IP_NF_TARGET_TTL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_TARGET_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IP6_NF_MATCH_HL=y" >> ./common/arch/arm64/configs/gki_defconfig
       
          
          # Remove defconfig check
          sed -i '2s/check_defconfig//' ./common/build.config.gki


      - name: Build Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/
        run: |
          cd kernel_platform
          mkdir out
          export PATH="/usr/lib/ccache:$PATH"
          # Modified build command with correct syntax
          ./build_with_bazel.py \
            -t pineapple \
            gki \
            --jobs=$(nproc --all) \
            --verbose_failures \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
            --ignore_missing_projects \
            -o "$(pwd)/out"
      - name: Debug Working Directory
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/out/dist
        run: |
          pwd
          ls -l
      - name: Create ZIP Package
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          cp kernel_platform/oneplus12_v/kernel_platform/out/dist/Image AnyKernel3/Image
          cp kernel_platform/oneplus12_v/kernel_platform/out/dist/Image.lz4 AnyKernel3/Image.lz4
          cd AnyKernel3  # Move to AnyKernel3 directory
          ZIP_NAME="Anykernel3-OP-A15-android14-6.1-KernelSUNext-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          echo "Creating zip file $ZIP_NAME..."
          zip -r "../$ZIP_NAME" ./*
          ls -lh "../$ZIP_NAME"
          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: Release ${{ github.event.inputs.tag_name }}
          body: |
            Release of Kernel ${{ github.event.inputs.tag_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: builds/${{ env.ROOT_DIR }}/${{ env.ZIP_NAME }}
          asset_name: ${{ env.ZIP_NAME }}
          asset_content_type: application/zip

      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: |
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/out/*.log
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/**/*.rej
          retention-days: 5
